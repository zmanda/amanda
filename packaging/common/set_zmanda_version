#!/usr/bin/env bash
#
# This script is run by extension's autogen and amanda's builddist
# to create the FULL_VERSION and PKG_REV files.  This build ignores the
# contents of VERSION because it is old and often out of date.  Instead
# Amanda uses git branch or tag names. 
#
# If run from a tag, the value of VERSION is the branch or tag name
# reformatted.
#set -x

# only if called externally ...
[ $0 -ef ${BASH_SOURCE[0]} ] && gitref=${1:-HEAD}

selfdir=$(readlink -e ${BASH_SOURCE[0]})
selfdir=$(dirname ${selfdir})
src_root=$(git rev-parse --show-toplevel)
if [ "$(type -t get_yearly_tag)" != "function" ]; then
    . ${selfdir}/build_functions.sh
fi

# Fall back to previous build (or dist build?)?
[ ! -e $src_root/.git -a -s $src_root/FULL_VERSION -a -s $src_root/PKG_REV ] && 
   exit 0

[ -e $src_root/.git ] ||
    die "Error: $(pwd): No subversion or git info available!"   #### ERROR

git remote -v show > vcs_repo.info
git --no-pager log --max-count=1 >> vcs_repo.info

# call the version setup
set_zmanda_version $gitref

if [[ "$VERSION_TAR" == /tmp/*/*.tar ]] && [ -f "$VERSION_TAR" ]; then
    rm -rf ${VERSION_TAR%/*}
fi

## Generate version from repository data.
[ -n "${BRANCH}${REV}" ] ||
    die "Couldn't set FULL_VERSION or PKG_REV!"   #### ERROR

# Amanda makes it easy to "force" a version string: just set FULL_VERSION
# *after* running autogen
echo "set version : $VERSION"
echo "set branch : $BRANCH"
echo "set branch (long) : $LONG_BRANCH"

# Write out REV for installer build script.
echo "set rev : $REV"
