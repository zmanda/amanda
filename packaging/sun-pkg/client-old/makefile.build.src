#!/usr/bin/make -f

SHELL := /bin/bash -x
THIS_MAKEFILE := $(realpath $(lastword $(MAKEFILE_LIST)))
#
#
SRCDIR			  := $(shell pwd -P)
# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

# Explanation of solaris paths:
# %%INSTALL_TOPDIR%%/common/*: Bitrock stack.
# /opt/SUNWspro/*: Sun compiler, NOT USED FOR PACKAGING.
# /opt/csw/*: OpenCSW.
# /usr/ccs/*: sun compilation tools (ld, lex, yacc)
# /usr/sfw/*: SunFreeware, sometimes. (solaris 10)
# /usr/local/*: SunFreeware, othertimes. (solaris 8)

# list of debian-helper bins ignored:
# dh_testdir
# dh_testroot
# dh_clean -d -v  # build dirs only
# dh_prep --package=amanda-backup-client
# dh_installdirs -v --package=amanda-backup-client
# dh_installdocs -v
# dh_installchangelogs -v ChangeLog
# dh_install -v --list-missing
# dh_compress
# dh_fixperms -v
# dh_perl -v $(buildroot)$(AMPERLDIR) $(buildroot)$(AMLIBEXECDIR) $(buildroot)$(BINDIR) $(buildroot)/usr/sbin
# dh_makeshlibs -v
# dh_shlibdeps -v -l"$(buildroot)$(AMLIBDIR)"
# dh_installdeb
# dh_gencontrol -- -Tdebian/substvars
# dh_md5sums
# dh_builddeb


AMVER=%%VERSION%%

BITROCK_DIR=%%INSTALL_TOPDIR%%
AMANDAHOMEDIR=$(BITROCK_DIR)/amanda
BUILD_TOPDIR=$(SRCDIR)
# Comment this to disable silent make.
#MAKEFLAGS+=s LIBTOOLFLAGS=--silent

# first prefer /usr/gcc/N/bin/gcc
# then prefer /usr/sfw/bin/gcc
# then prefer /opt/csw/bin/gcc
# then allow /bin/gcc etc...

CC := $(shell PATH=$$(ls 2>/dev/null -d /usr/gcc/*/bin):/usr/sfw/bin:/opt/csw/bin:$${PATH} command -v gcc)

GCC_TARGET := $(shell $(CC) -dumpmachine | tr -d '\n')

ifeq ($(findstring x86_64,$(GCC_TARGET)),x86_64)
LIBARCHDIR=lib/amd64
BINARCHDIR=bin/amd64
else
LIBARCHDIR=lib
BINARCHDIR=bin
endif
CSWLIBDIR=/opt/csw/$(LIBARCHDIR)
PKG_CONFIG_PATH="$(SRCDIR)/sun-pkg:$(LIBDIR)/pkgconfig:$(CSWLIBDIR)/pkgconfig"

#
# - gnu-only bin dirs (2.10 and 2.11)
# - directory of CC (likely /usr/sfw/bin or /opt/csw/bin
# - /usr/sfw/bin
# - /usr/bin or /usr/bin/amd64
# - /usr/bin itself
#
##
export MAKE=/opt/csw/bin/gmake
BUILD_PATH=/usr/gnu/$(BINARCHDIR):/usr/gnu/bin:/opt/csw/gnu:$(dir $(CC)):/usr/sfw/bin:/usr/$(BINARCHDIR):/usr/bin:/usr/sbin:/opt/csw/$(BINARCHDIR):/opt/csw/bin:/usr/ccs/$(BINARCHDIR):/usr/ccs/bin
FAKEROOT_PATH=/opt/csw/gnu:/opt/csw/bin
export PATH=$(BUILD_PATH)

HOST_GNU_TYPE   = $(GCC_TARGET)
BUILD_GNU_TYPE  = $(GCC_TARGET)


# These are variables that the user can override.  They get used in various
# places during configure, build, and install.
PREFIX=/usr
SBINDIR=$(PREFIX)/sbin
LIBDIR=$(PREFIX)/$(LIBARCHDIR)
LIBEXECDIR=$(LIBDIR)
AMLIBEXECDIR=$(LIBEXECDIR)/amanda
# must be architecture-specific ...
SHLIBDIR=$(PREFIX)/$(LIBARCHDIR)
AMLIBDIR=$(SHLIBDIR)/amanda
MANDIR=$(PREFIX)/share/man
DOCDIR=$(PREFIX)/share/doc
SYSCONFDIR=$(BITROCK_DIR)/etc
AMCONFDIR=$(SYSCONFDIR)/amanda
AMANDATES=$(AMANDAHOMEDIR)/amandates
LOCALSTATEDIR=/var
LOGDIR=%%LOGDIR%%
AMPERLDIR=$(AMLIBDIR)/perl

# SYS_UNITDIR=$(LIBDIR)/systemd/system
# SYS_LDSOCONFDIR=$(SYSCONFDIR)/ld.so.conf.d
# SYS_LOGROTATEDIR=$(SYSCONFDIR)/logrotate.d

BITROCK_REPO_DIR=$(SRCDIR)/bitrock-stack
AMANDAUSER=%%AMANDAUSER%%
AMANDAGROUP=%%AMANDAGROUP%%
AMANDACLIGROUP=%%AMANDACLIGROUP%%

# not possible
# CFLAGS="$${CFLAGS}"
# export CFLAGS="-specs=$${PWD}/gcc-specs -L/usr/ccs/lib -m64 "; \
# --enable-as-needed
# LD=$(LD)

define CONFIG_FLAGS_COMMON
CC=$(CC) \
PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) \
MAKE=/opt/csw/bin/gmake \
--enable-shared \
--host=$(HOST_GNU_TYPE) \
--build=$(BUILD_GNU_TYPE) \
--prefix=$(PREFIX) \
--libdir=$(LIBDIR) \
--sysconfdir=$(SYSCONFDIR) \
--sharedstatedir=$(LOCALSTATEDIR) \
--localstatedir=$(LOCALSTATEDIR) \
\
--sbindir=$(SBINDIR) \
--mandir=$(MANDIR) \
--libexecdir=$(LIBEXECDIR) \
--with-amperldir=$(AMPERLDIR) \
--with-amlibdir=$(AMLIBDIR) \
--with-amdatadir=$(AMANDAHOMEDIR) \
--with-amlibexecdir=$(AMLIBEXECDIR) \
--with-gnutar-listdir=$(AMANDAHOMEDIR)/gnutar-lists \
--with-index-server=localhost \
--with-tape-server=localhost \
--with-user=$(AMANDAUSER) \
--with-group=$(AMANDAGROUP) \
--with-fqdn \
--with-tmpdir=$(AMANDAHOMEDIR)/tmp \
--with-bsd-security \
--with-bsdtcp-security \
--with-bsdudp-security \
--with-ssh-security \
--with-amandahosts \
--with-amandates=$(AMANDATES) \
--with-tcpportrange=11000,11040 \
--with-udpportrange=800,840 \
--with-low-tcpportrange=800,840 \
--with-assertions \
--with-failure-code \
--with-debugging=$(LOGDIR) \
--enable-s3-device \
--enable-manpage-build \
--disable-installperms \
--disable-syntax-checks \
--with-xsltproc=/opt/csw/bin/xsltproc \
--disable-static
endef


#
# subpackage paths
#
# used to narrow the dh_ tools focus
# dhpkg=--package=amanda-backup-client
# r=$(SRCDIR)/sun-pkg/tmp
# buildroot_server=$(SRCDIR)/sun-pkg/amanda-backup-server
buildroot=$(SRCDIR)/sun-pkg/amanda-backup-client
# platform=$(SRCDIR)/sun-pkg/amanda-platform
devel=$(SRCDIR)/sun-pkg/amanda-backup-client-devel

# export LD_LIBRARY_PATH=/opt/csw/lib/amd64:/opt/csw/lib:/usr/sfw/lib/amd64:/usr/sfw/lib

build: build-stamp
build-stamp:
	# dh_testdir
	
	# a try to use gld
	# $(CC) -dumpspecs | sed -e 's,collect2,$(LD) -A elf_x86_64,' > gcc-specs
	
	cat >./rpm-env.sh - <<<'\
           unset CONFIG_LDPATH; \
           unset AMPERL; \
           export PKG_CONFIG_PATH=$${PKG_CONFIG_PATH}; \
           export PATH=$${PATH}; \
           export PERL=$$(command -v perl); \
           export PYTHON=$$(command -v python3);'
	#cat >>./rpm-env.sh - <<<'\
        #   export LDFLAGS="-Wl,--disable-new-dtags -Wl,-rpath -Wl,$(AMLIBDIR)"'
	
	# annoying.. but it forces inclusion of all the needed perl
# 	sed -i -e 's,^if *WANT_SERVER,if WANT_CLIENT,' perl/Makefile.am
	
	# all must be done if configure is not set already
	[ -f ./configure ] || ./autogen
	
	# too slow to bother
	# cd $$(git rev-parse --show-toplevel); git submodule deinit -f 000-external/tools-archives
	
	echo -------------------
	echo "CONFIG_FLAGS_COMMON set to $(CONFIG_FLAGS_COMMON)"
	echo -------------------
	
	# no need for LDPATH, PATH (for perl/python)
	set -x; . ./rpm-env.sh ; \
	     ./configure \
	        $(CONFIG_FLAGS_COMMON) \
		--without-server
	touch missing
	
	set -x; \
	    LEX=flex \
	    YACC=bison \
	    $(MAKE) -j`nproc` VERBOSE=1
	
	touch $@
	echo ------------------- END BUILD

DEVEL_CONFIG_COPIED = config.rpath amanda gnulib macro-archive config.h
DEVEL_INCLUDE_FILES =  \
	amanda.h amutil.h amflock.h config.h conffile.h device.h \
	debug.h file.h sockaddr-util.h safe-read.h full-read.h full-write.h \
	s3-util.h am_sl.h amjson.h glib-util.h property.h fileheader.h directtcp.h \
	directtcp-connection.h

# Build architecture-dependent files here.
binary-install-client: build-stamp
	# dh_testdir
	rm -rf $(buildroot)
	mkdir -p $(buildroot)
	# dh_prep $(dhpkg)
	# dh_installdirs -v $(dhpkg)
	
	echo ------------------- START INSTALL
	################################################ perform source make-install
	set -x; . ./rpm-env.sh; \
	   $(MAKE) -j1 install DESTDIR=$(buildroot)
	################################################ done with source make-install
	
	rm -f $(buildroot)$(SYS_UNITDIR)/amanda-server*

	##################
	# needed directories
	##################
	# install -d $(buildroot)$(SYS_LDSOCONFDIR)
	# install -d $(buildroot)$(SYS_LOGROTATEDIR)
	# install -m 644 /dev/null \
        #          $(buildroot)$(SYS_LDSOCONFDIR)/amanda.conf
	# install -m 644 system-scripts/amanda-logrotate \
        #          $(buildroot)$(SYS_LOGROTATEDIR)/amanda

	install -d $(buildroot)/etc/inet
	install $(buildroot)$(AMANDAHOMEDIR)/example/inetd.conf.amandaclient $(buildroot)/etc/inet/amandaclient

	echo "Amanda Community Edition - version $(AMVER)" > $(buildroot)$(AMANDAHOMEDIR)/amanda-release
	
	##################
	# install/shift misc files in place
	##################
	mkdir -p $(buildroot)$(AMANDAHOMEDIR)/{gnutar-lists,.gnupg,.ssh,tmp}
	echo "$(AMVER)" > $(buildroot)$(AMANDAHOMEDIR)/amanda-release

	# package-placeholders all filled in upon install only
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.gnupg/{pubring.gpg,random_seed,secring.gpg,am_key.gpg}
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.ssh/{id_rsa_amrecover,id_rsa_amdump}{,.pub};
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.am_passphrase
	
	# mv ${ROOT_SHAREDIR}/amanda ${ROOT_SHAREDIR}/amanda-${amanda_version}
	
	mkdir -p $(buildroot)$(AMCONFDIR)
	mkdir -p $(buildroot)$(LOGDIR)
	mkdir -p $(buildroot)$(LOGDIR)/client
	
	install -m 640 /dev/null $(buildroot)$(AMANDATES)

	# both are installed by make-install...
	install -m 644 $(buildroot)$(AMCONFDIR)/amanda-security.conf                   $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	install -m 644 $(buildroot)$(AMANDAHOMEDIR)/example/amanda-client.conf         $(buildroot)$(AMCONFDIR)/amanda-client.conf
	install -m 644 $(buildroot)$(AMANDAHOMEDIR)/example/global-amanda.conf         $(buildroot)$(AMCONFDIR)/amanda.conf
	install -m 600 $(buildroot)$(AMANDAHOMEDIR)/example/amandahome-dot-amandahosts $(buildroot)$(AMANDAHOMEDIR)/.amandahosts
	install -m 640 $(buildroot)$(AMANDAHOMEDIR)/example/amandahome-dot-profile     $(buildroot)$(AMANDAHOMEDIR)/.profile
	

##################
################################ permissions for backup-client
##################
perm-install-client: binary-install
	# dh_testroot
	# dh_fixperms -v
	##################
	# root-setuid executable / private-contents
	##################
	[ -s installperms.sh ] && \
            while read d _chown _chmod path; do \
                eval "chown $$_chown $(buildroot)$$path && chmod $$_chmod $(buildroot)$$path"; \
            done < installperms.sh
	
	# install -o root -g root -m 0644 sun-pkg/lintian \
	# 	$(buildroot)/usr/share/lintian/overrides/amanda-backup-client
	chown -R root:root $(buildroot)$(AMLIBEXECDIR)
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(AMANDAHOMEDIR)
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(SYSCONFDIR)/amanda
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)/usr/sbin/*
	chown root:root                       $(buildroot)$(AMLIBDIR)/lib*.so
	chown root:root                       $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/ambind
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/application/amgtar
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/application/amstar
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/calcsize
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/killpgrp
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/rundump
	chown root:$(AMANDACLIGROUP) $(buildroot)$(AMLIBEXECDIR)/runtar
	
	chmod -R u=rwX,g=rX,o=rX $(buildroot)$(AMLIBEXECDIR) 
	chmod 0755 $(buildroot)$(AMLIBEXECDIR)/*
	chmod 0755 $(buildroot)$(AMLIBEXECDIR)/application/*
	# chmod 0755 $(buildroot)$(AMLIBEXECDIR)/rest-server/bin/*
	
	# touching these afterward removes the critical setuid bit
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/ambind
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/application/amgtar
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/application/amstar
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/calcsize
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/killpgrp
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/rundump
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/runtar
	
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amcat.awk
	
	rm -f $(buildroot)$(AMLIBEXECDIR)/amplot.awk
	rm -f $(buildroot)$(AMLIBEXECDIR)/amplot.g
	rm -f $(buildroot)$(AMLIBEXECDIR)/amplot.gp
	 
	##################
	# internal executible files
	##################
	chmod u=rwx,g=rx,o=rx $(buildroot)/usr/sbin/*
	##################
	# internal readable / private-contents files
	##################
	chmod -R u=rwX,g=rX,o= $(buildroot)$(SYSCONFDIR)/amanda
	
	# NOTE: non-recursive setup of dirs
	chmod -R u=rwX,g=rX,o= $(buildroot)$(LOGDIR)
	chmod    u=rwX,g=rwX,o= $(buildroot)$(LOGDIR)
	# chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/server
	# chmod 0700 $(buildroot)$(LOGDIR)/server
	# chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/amanda-rest-server-log
	# chmod 0700 $(buildroot)$(LOGDIR)/amanda-rest-server-log
	
	##################
	# config/internal files
	##################
	chmod -R u=rwX,g=rX,o= $(buildroot)$(AMANDAHOMEDIR)
	chmod -R u=rwX,g=rwX,o= $(buildroot)$(AMANDAHOMEDIR)/gnutar-lists/
	chmod -R u=rwX,g=,o=  $(buildroot)$(AMANDAHOMEDIR)/{.gnupg,.ssh,.amandahosts,.am_passphrase}
	
	##################
	# resource files only
	##################
	chmod u=rx,g=rx,o=rx $(buildroot)$(AMLIBDIR)/lib*.so
	chmod u=rw,g=r,o=r $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	# chmod u=r,g=r,o=r $(buildroot)$(SYSCONFDIR)/*.d/*
	# rely on sanity-check permissions otherwise
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------
	sed -i -e '/^i /!d' $(buildroot).pkgproto
	cd $(buildroot); /bin/pkgproto . >> $(buildroot).pkgproto

#    -rw-r--r--    1 root    root                     2030 Nov 16 22:05 /etc/amanda-security.conf
#
#    drwx------    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.gnupg
#    drwx------    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.ssh
#    -rw-------    1 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.am_passphrase
#    -rw-------    1 amandabaamandaba                  180 Nov 16 22:05 /var/lib/amanda/.amandahosts

#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /etc/amanda
#    -rw-r-----    1 amandabaamandaba                  794 Nov 16 22:05 /etc/amanda/amanda-client.conf
#    -rw-r-----    1 amandabaamandaba                 2030 Nov 16 22:05 /etc/amanda/amanda-security.conf
#    -rw-r-----    1 amandabaamandaba                   73 Nov 16 22:05 /etc/amanda/amanda.conf
#
#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda
#    -rw-r-----    1 amandabaamandaba                   56 Nov 16 22:05 /var/lib/amanda
#
#    drwxrwx---    2 amandabaamandaba                    0 Nov 16 22:05 /var/log/amanda
#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /var/log/amanda/client
#
#    drwxrwx---    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/gnutar-lists
#
#    -r--r--r--    1 root    root                        0 Nov 16 22:05 /etc/*.d/...
#    -r--r--r--    1 root    root                      784 Nov 16 22:05 /usr/lib/systemd/system/
#
#    -rw-r--r--    1 root    root                      135 Nov 16 22:05 /usr/lib64/amanda/amcat.awk
#
#    drwxr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/lib64/...
#    -rwxr-xr-x    1 root    root                      965 Nov 16 22:05 /usr/lib64/...
#    -rwxr-xr-x    1 root    root                     3365 Nov 16 22:05 /usr/sbin/...
#
#    drwxr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/lib64/amanda/perl
#    -rw-r--r--    2 root    root                        0 Nov 16 22:05 /usr/lib64/amanda/perl/...
#
#    -rwsr-x---    1 root    tape                    11376 Nov 16 22:05 /usr/lib64/amanda/ambind
#    -rwsr-xr-x    1 root    root                    51096 Nov 16 22:05 /usr/lib64/amanda/application/amgtar
#    -rwsr-xr-x    1 root    root                    42200 Nov 16 22:05 /usr/lib64/amanda/application/amstar
#    -rwsr-x---    1 root    tape                    15920 Nov 16 22:05 /usr/lib64/amanda/calcsize
#    -rwsr-x---    1 root    tape                    11520 Nov 16 22:05 /usr/lib64/amanda/killpgrp
#    -rwsr-x---    1 root    tape                    11544 Nov 16 22:05 /usr/lib64/amanda/rundump
#    -rwsr-x---    1 root    tape                    15728 Nov 16 22:05 /usr/lib64/amanda/runtar
#
#    dr-xr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/share/
#    -r--r--r--    1 root    root                     1508 Nov 16 22:05 /usr/share/

##################
################################ install for backup-client-devel
##################
binary-install-devel: binary-install-client
	# dh_testdir
	rm -rf $(devel)
	mkdir -p $(devel)
	# dh_prep $(dhpkg)-devel
	# dh_installdirs -v $(dhpkg)-devel
	
	# snip off $(buildroot) from start ... to dup the path
	mkdir -p $(devel)$(AMLIBDIR)
	ls -1 $(buildroot)$(AMLIBDIR)/*.{a,la,so} $(buildroot)$(AMLIBDIR)/*.so.* 2>/dev/null | xargs cp -a -t $(devel)$(AMLIBDIR)
	mkdir -p $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	mkdir -p $(devel)/usr/include/amanda
	
	echo "Amanda Community Edition - version $(AMVER)" > $(devel)$(AMANDAHOMEDIR)/amanda-release
	
	rm -f $(devel)$(AMANDAHOMEDIR)/amanda-client-config
	
	cp -a ./config.status ./config.status.save
	sed -i -e ':redo' -e '/"\\$$/{N;s,"\\\n",,;b redo}' ./config.status.save
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	./config.status.save --config | \
	   sed \
		 -e "s|$$build_topdir_abs|$$build_topdir|g" \
	         -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		 -e "s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g" \
	     >$(devel)$(AMANDAHOMEDIR)/amanda-client-config
	
	cp -a $(addprefix config/,$(DEVEL_CONFIG_COPIED)) $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	
	pkg_root_rev=$$(git submodule | sed -e '\,/packaging,!d' -e 's,^ *\(.........\).*,\1,'); \
		cp -av ./config.status.save $(devel)$(AMANDAHOMEDIR)/amanda-autoconf/config.status-$${pkg_root_rev}
	
	# each may have a different *-src dir
	cp -a $(addprefix */,$(DEVEL_INCLUDE_FILES)) $(devel)/usr/include/amanda
		
	touch dummy.la
	#
	# these files can't work with old paths in them anyway
	#
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	find dummy.la $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f | \
		xargs sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g"
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		     -e "/dependency_libs=/s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g"
	
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs chmod uog-x
	rm -f dummy.la
	#
	# confirm no paths are left
	#
	set -x; if find $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi
	set -x; if find $(devel)$(LIBDIR) -type f -name \*.la  -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi
	
	cp -f $(buildroot)$(SYSCONFDIR)/amanda/amanda-security.conf $(buildroot)$(SYSCONFDIR)/amanda-security.conf

##################
################################ permissions for backup-client-devel
##################
perm-install-devel: binary-install
	# dh_testroot
	chown -R root:root $(devel)
	find $(devel) -type f | \
		xargs chmod 0644
	find $(devel) -type d | \
		xargs chmod 0755
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------
	sed -i -e '/^i /!d' $(devel).pkgproto
	cd $(devel); /bin/pkgproto . >> $(devel).pkgproto


#
# bottleneck after completed all installation
#
binary-install: binary-install-stamp
binary-install-stamp: 
	LD_PRELOAD= \
	LD_LIBRARY_PATH= \
	    $(MAKE) -f $(THIS_MAKEFILE) PATH=$(BUILD_PATH) \
	          binary-install-client binary-install-devel 
	#
	# dh_installdocs -v
	#
	#dh_installexamples -v $(buildroot)$(AMANDAHOMEDIR)/example
	#dh_installchangelogs -v ChangeLog
	#dh_strip --dbg-package=amanda-backup-client-dbg -X $(BITROCK_DIR)
	#
	#dh_compress
	
	# need external dependencies
	LD_PRELOAD= /usr/bin/touch $@

#
# bottleneck after completed all permissions resets
#
final-install:
	# fakeroot can remain entirely within this MAKE only,
	#    if perms were remembered from these chmod/chown calls
	fakeroot -- $(MAKE) -f $(THIS_MAKEFILE) \
	   PATH=$(FAKEROOT_PATH) \
	   SHELL=/opt/csw/bin/bash \
	   GCC_TARGET=$(GCC_TARGET) \
		   perm-install-devel perm-install-client 
	#
	# dh_makeshlibs -v
	# dh_shlibdeps $(dhpkg) -v \
	#	-l"$(SHLIBDIR):$(AMLIBDIR)"
	#
	# no platform for clients and only check backup_client for perl details (perl version/base deps only)
	#
	# dh_perl $(dhpkg) -v $(AMPERLDIR)
	# dh_installdeb
	# dh_gencontrol
	# dh_md5sums
	# dh_builddeb
	#
	GNU_TRIPLET=$$(. $(SRCDIR)/config/config.guess); \
        	[ -f sun-pkg/depend ] || \
                { [ -f sun-pkg/depend-$$GNU_TRIPLET ] && mv -f sun-pkg/depend-$$GNU_TRIPLET sun-pkg/depend; }
	cd sun-pkg; set -x; pkgmk -r $(buildroot) -o -f $(buildroot).pkgproto -d .
	cd sun-pkg; set -x; pkgmk -r $(devel) -o -f $(devel).pkgproto -d .
	
	set +e; GNU_TRIPLET=$$(. $(SRCDIR)/config/config.guess); \
	for NAME in $$(ls sun-pkg/*/pkgmap); do \
	   NAME="$${NAME#sun-pkg/}"; \
	   NAME=$${NAME%/pkgmap}; \
	   ( set -x; pkgtrans -s sun-pkg $(SRCDIR)/$$NAME-$$(cat FULL_VERSION)-$$GNU_TRIPLET.pkg $$NAME; ); \
	   [ -s sun-pkg/$$NAME.p5m ] && \
	       sed -i -e '/^set /!d' sun-pkg/$$NAME.p5m; \
	   [ -x /bin/pkgsend ] && \
	       /bin/pkgsend generate $(SRCDIR)/$$NAME-$$(cat FULL_VERSION)-$$GNU_TRIPLET.pkg >> sun-pkg/$$NAME.p5m; \
	   true; \
	done

clean:
	# dh_testdir
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent clean
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent distclean
	-rm -f build-stamp missing config/config.h common-src/genversion
	-find . -type d -name .deps -exec rm -rf {} \;
	-test -r $$(automake --print-libdir)/config.sub && \
		cp -f $$(automake --print-libdir)/config.sub config/config.sub
	-test -r $$(automake --print-libdir)/config.guess && \
		cp -f $$(automake --print-libdir)/config.guess config/config.guess
	# dh_clean -d -v  # build dirs only

binary: final-install
.PHONY: build clean binary-install binary-install-client binary-install-devel binary-install-platform
.PHONY: final-install perm-install-client perm-install-devel
