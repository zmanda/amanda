#!/usr/bin/make -f

SHELL := $(shell [ -x /bin/bash ] && echo /bin/bash || command -v bash)
THIS_MAKEFILE := $(realpath $(lastword $(MAKEFILE_LIST)))
#
#
SRCDIR := $(realpath $(PWD))
# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

# Explanation of solaris paths:
# %%INSTALL_TOPDIR%%/common/*: Bitrock stack.
# /opt/SUNWspro/*: Sun compiler, NOT USED FOR PACKAGING.
# /opt/csw/*: OpenCSW.
# /usr/ccs/*: sun compilation tools (ld, lex, yacc)
# /usr/sfw/*: SunFreeware, sometimes. (solaris 10)
# /usr/local/*: SunFreeware, othertimes. (solaris 8)

# list of debian-helper bins ignored:
# dh_testdir
# dh_testroot
# dh_clean -d -v  # build dirs only
# dh_prep --package=amanda-backup-server
# dh_installdirs -v --package=amanda-backup-server
# dh_installdocs -v
# dh_installchangelogs -v ChangeLog
# dh_install -v --list-missing
# dh_compress
# dh_fixperms -v
# dh_perl -v $(buildroot)$(AMPERLDIR) $(buildroot)$(AMLIBEXECDIR) $(buildroot)$(BINDIR) $(buildroot)$(SBINDIR)
# dh_makeshlibs -v
# dh_shlibdeps -v -l"$(buildroot)$(AMLIBDIR)"
# dh_installdeb
# dh_gencontrol -- -Tdebian/substvars
# dh_md5sums
# dh_builddeb

AMVER=%%VERSION%%

PREFIX=/usr
AMPREFIX=%%INSTALL_TOPDIR%%
AMANDAHOMEDIR=%%AMANDAHOMEDIR%%
BUILD_TOPDIR=$(SRCDIR)
# Comment this to disable silent make.
#MAKEFLAGS+=s LIBTOOLFLAGS=--silent

CC := $(shell PATH=$$(ls 2>/dev/null -d /usr/gcc/*/bin):/usr/sfw/bin:/opt/csw/bin:$${PATH} command -v gcc)
# first prefer /usr/gcc/N/bin/gcc
# then prefer /usr/sfw/bin/gcc
# then prefer /opt/csw/bin/gcc
# then allow /bin/gcc etc...

# NOTE: below needs to run under fakeroot!!!
ifeq ($(FAKEROOTKEY),)
GCC_TARGET := $(shell $(CC) -dumpmachine)
GCC_TARGET := $(strip $(GCC_TARGET))
endif

LIBARCHDIR=lib
BINARCHDIR=bin
BIN=bin

ifeq ($(findstring x86_64,$(GCC_TARGET)),x86_64)
LIBARCHDIR=lib/amd64
BINARCHDIR=bin/amd64
endif

export HOST_GNU_TYPE   = $(GCC_TARGET)
export BUILD_GNU_TYPE  = $(GCC_TARGET)

CSWLIBDIR=/opt/csw/$(LIBARCHDIR)
ROOTLIBDIR=/usr/lib
export PKG_CONFIG_PATH="$(SRCDIR)/PKGBUILD:$(ROOTLIBDIR)/pkgconfig:$(CSWLIBDIR)/pkgconfig"

#
# - gnu-only bin dirs (2.10 and 2.11)
# - directory of CC (likely /usr/sfw/bin or /opt/csw/bin
# - /usr/sfw/bin
# - /usr/bin or /usr/bin/amd64
# - /usr/bin itself
#
##
export MAKE=/opt/csw/bin/gmake
PATH_DIRS = \
    /usr/lib/git-core \
    /usr/gnu/$(BINARCHDIR) /usr/gnu/$(BIN) \
    /opt/csw/gnu \
    $(BINARCHDIR) \
    /$(BIN) \
    $(dir $(CC)) \
    /usr/sfw/$(BINARCHDIR) /usr/sfw/$(BIN) \
    /opt/csw/$(BINARCHDIR) /opt/csw/$(BIN) \
    /usr/$(BINARCHDIR) /usr/$(BIN) \
    /usr/s$(BINARCHDIR) /usr/s$(BIN) \
    /usr/ccs/$(BINARCHDIR) /usr/ccs/$(BIN)

# SHARED_DIRS = \
#     opt var usr \
#     usr/sbin \
#     usr/share usr/share/man \
#     usr/share/man/man[0-9] \
#     var/svc var/svc/manifest var/svc/manifest/network \
#     var/log
# usr/share usr/share/man
# usr/share/man/man[0-9]

SHARED_DIRS = \
    /opt \
    $(LOCALSTATEDIR) \
    /usr \
    $(SBINDIR) \
    $(LOCALSTATEDIR)/svc \
    $(LOCALSTATEDIR)/svc/manifest \
    $(LOCALSTATEDIR)/svc/manifest/network


BUILD_PATH = $(shell IFS=:; set -- $(PATH_DIRS); echo "$$*")

FAKEROOT_PATH=/opt/csw/gnu:/opt/csw/bin
export PATH=$(BUILD_PATH)

XSLTPROC_PATH   = $(wildcard /opt/csw/bin/xsltproc)
XSLTPROC_PATH   ?= $(wildcard /usr/bin/xsltproc)


# These are variables that the user can override.  They get used in various
# places during configure, build, and install.
PREFIX=/usr
BINDIR=$(PREFIX)/bin
SBINDIR=$(PREFIX)/sbin

LIBDIR=$(PREFIX)/lib
SHLIBDIR=$(PREFIX)/$(LIBARCHDIR)
#
LIBEXECDIR=$(PREFIX)/lib
AMLIBEXECDIR=$(LIBEXECDIR)/amanda
# must be architecture-specific ...
AMLIBDIR=$(SHLIBDIR)
AMPERLDIR=$(AMLIBDIR)/perl

SHAREDIR=$(AMPREFIX)/share
MANDIR=$(SHAREDIR)/man
DOCDIR=$(SHAREDIR)/doc
AMDATADIR=$(SHAREDIR)/amanda
AMTESTSDIR=$(AMDATADIR)/tests
SYSCONFDIR=%%SYSCONFDIR%%
AMCONFDIR=$(SYSCONFDIR)/amanda
#
AMANDATES=$(AMANDAHOMEDIR)/amandates
LOCALSTATEDIR=/var
LOGDIR=%%LOGDIR%%

CONFIG_FILES = \
    $(AMANDAHOMEDIR)/.amandahosts \
    $(AMANDAHOMEDIR)/.am_passphrase \
    $(AMANDAHOMEDIR)/.gnupg/.* \
    $(AMANDAHOMEDIR)/.profile \
    $(AMANDAHOMEDIR)/.ssh/.* \
    $(AMANDAHOMEDIR)/amandates \
    $(AMCONFDIR)/amanda-client.conf \
    $(AMCONFDIR)/amanda-security.conf \
    $(AMCONFDIR)/amanda.conf \
    $(SYSCONFDIR)/amanda-security.conf

# for Debian.. most reliable is this
#SYS_UNITDIR_SYSD=$(lastword $(filter-out %.late,$(shell systemctl show -p UnitPath)))
#SYS_UNITDIR=$(or $(SYS_UNITDIR_SYSD),/lib/systemd/system)
#SYS_LDSOCONFDIR=$(SYSCONFDIR)/ld.so.conf.d
#SYS_LOGROTATEDIR=$(SYSCONFDIR)/logrotate.d

AMANDAUSER=%%AMANDAUSER%%
AMANDAGROUP=%%AMANDAGROUP%%
AMANDACLIGROUP=%%AMANDACLIGROUP%%


define CONFIG_FLAGS_COMMON
CFLAGS="$${CFLAGS}" \
LDFLAGS="$${LDFLAGS}" \
CC=$(CC) \
PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) \
MAKE=$(MAKE) \
--enable-shared \
--quiet \
--host=$(HOST_GNU_TYPE) \
--build=$(BUILD_GNU_TYPE) \
--prefix=$(PREFIX) \
--libdir=$(LIBDIR) \
--sysconfdir=$(SYSCONFDIR) \
--sharedstatedir=$(LOCALSTATEDIR) \
--localstatedir=$(LOCALSTATEDIR) \
--bindir=$(BINDIR) \
--sbindir=$(SBINDIR) \
--mandir=$(MANDIR) \
--libexecdir=$(LIBEXECDIR) \
--with-configdir=$(AMCONFDIR) \
--with-amperldir=$(AMPERLDIR) \
--with-amlibdir=$(AMLIBDIR) \
--with-amdatadir=$(AMANDAHOMEDIR) \
--with-amlibexecdir=$(AMLIBEXECDIR) \
--with-gnutar-listdir=$(AMANDAHOMEDIR)/gnutar-lists \
--with-index-server=localhost \
--with-tape-server=localhost \
--with-user=$(AMANDAUSER) \
--with-group=$(AMANDAGROUP) \
--with-fqdn \
--with-tmpdir=$(AMANDAHOMEDIR)/tmp \
--with-bsd-security \
--with-bsdtcp-security \
--with-bsdudp-security \
--with-ssh-security \
--with-amandahosts \
--with-amandates=$(AMANDATES) \
--with-tcpportrange=11000,11040 \
--with-udpportrange=800,840 \
--with-low-tcpportrange=800,840 \
--with-assertions \
--with-failure-code \
--with-debugging=$(LOGDIR) \
--enable-manpage-build \
--disable-syntax-checks \
--with-xsltproc=$(XSLTPROC_PATH) \
--disable-static \
--disable-installperms
endef
# NOTE: disable-installperms or install conflicts with chown/chmod later
# NOTE: solaris --enable-s3-device is best left enabled as default for only if libraries allow

#
# subpackage paths
#
# used to narrow the dh_ tools focus
#dhpkg              =  --package=amanda-backup-server
# r=$(SRCDIR)/PKGBUILD/tmp
# buildroot_client  =  $(SRCDIR)/PKGBUILD/amanda-backup-client
buildroot           =  $(SRCDIR)/PKGBUILD/amanda-backup-server
devel               =  $(SRCDIR)/PKGBUILD/amanda-backup-server-devel
tests               =  $(SRCDIR)/PKGBUILD/amanda-backup-server-tests


build: build-stamp
build-stamp:
	# dh_testdir
	( \
	   PYTHON=$$(command -v python3); \
	   \
	   CFLAGS="-g -pipe -O2 -std=gnu99"; \
	   LDFLAGS=""; \
	   PKG_CONFIG_PATH+=""; \
	   declare -p PYTHON CFLAGS LDFLAGS PKG_CONFIG_PATH >> ./build-env.sh; \
	   declare -p PATH >> ./build-env.sh; \
	)
	
	# annoying.. but it forces inclusion of all the needed perl
# 	sed -i -e 's,^if *WANT_SERVER,if WANT_CLIENT,' perl/Makefile.am
	
	# all must be done if configure is not set already
	[ -f ./configure ] || ./autogen
	
	echo -------------------
	echo "CONFIG_FLAGS_COMMON set to $(CONFIG_FLAGS_COMMON)"
	echo -------------------
	
	# no need for LDPATH, PATH (for perl/python)
	set -x; . ./build-env.sh; \
	./configure \
		$(CONFIG_FLAGS_COMMON)
	
	touch missing
	
	# remake once to make sure
	set -x; . ./build-env.sh; \
	   $(MAKE) -j1 ./config.status VERBOSE=1
	# perform real build
	set -x; . ./build-env.sh; \
	    $(MAKE) -j`nproc` VERBOSE=1
	
	touch $@
	echo ------------------- END BUILD

DEVEL_CONFIG_COPIED = config.rpath gettext-macros gnulib amanda macro-archive config.h automake
DEVEL_INCLUDE_FILES =  \
	amanda.h amutil.h amflock.h config.h conffile.h device.h \
	debug.h file.h sockaddr-util.h safe-read.h full-read.h full-write.h \
	s3-util.h am_sl.h amjson.h glib-util.h property.h fileheader.h directtcp.h \
	directtcp-connection.h

# build-install step

##################
################################ architecture-dependent files here
##################
binary-install-server: build-stamp
	# dh_testdir
	rm -rf $(buildroot)
	mkdir -p $(buildroot)
	# dh_prep $(dhpkg)
	# dh_installdirs -v $(dhpkg)
	mkdir -p $(buildroot)$(AMANDAHOMEDIR)/{gnutar-lists,.gnupg,.ssh,tmp}
	mkdir -p $(buildroot)$(AMLIBEXECDIR)
	
	echo ------------------- START INSTALL
	################################################ perform source make-install
	set -x; . ./build-env.sh; \
            $(MAKE) -j1 install DESTDIR=$(buildroot)
	################################################ done with source make-install
	
	# rm -f $(buildroot)$(SYS_UNITDIR)/amanda-server*
	# rm -f $(buildroot)$(SYS_UNITDIR)/amanda-client*
	# rm -f $(buildroot)$(AMANDAHOMEDIR)/example/inetd.conf.amandaclient
	# rm -f $(buildroot)$(AMANDAHOMEDIR)/example/inetd.conf.amandaserver
	
	##################
	# needed directories
	##################
	# install -D -m 644 /dev/null \
	#         $(buildroot)$(SYS_LDSOCONFDIR)/amanda.conf
	# install -D -m 644 system-scripts/amanda-logrotate \
	#          $(buildroot)$(SYS_LOGROTATEDIR)/amanda
	
	# only for solaris...
	install -D $(buildroot)$(AMANDAHOMEDIR)/example/amandaserver.xml \
			$(buildroot)/var/svc/manifest/network/amandaserver.xml
	#
	# write release file with version
	echo "Amanda Community Edition - version $(AMVER)" \
	        > $(buildroot)$(AMANDAHOMEDIR)/amanda-release
	[ -s $(SRCDIR)/LONG_BRANCH ] && echo "ref=$$(cat $(SRCDIR)/LONG_BRANCH)" >> $(buildroot)/$(AMANDAHOMEDIR)/amanda-release
	
	##################
	# install/shift misc files in place
	##################
	
	# package-placeholders all filled in upon install only
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.gnupg/{pubring.gpg,random_seed,secring.gpg,am_key.gpg}
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.ssh/{id_rsa_amrecover,id_rsa_amdump}{,.pub};
	umask 027; touch $(buildroot)$(AMANDAHOMEDIR)/.am_passphrase
	
	mkdir -p $(buildroot)$(AMCONFDIR)
	mkdir -p $(buildroot)$(LOGDIR)
	mkdir -p $(buildroot)$(LOGDIR)/server
	mkdir -p $(buildroot)$(LOGDIR)/amandad
	
	install -m 640 /dev/null $(buildroot)$(AMANDATES)
	
	# both are installed by make-install...
	install -D -m 644 $(buildroot)$(AMCONFDIR)/amanda-security.conf                   $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	install -D -m 644 $(buildroot)$(AMANDAHOMEDIR)/example/amanda-client.conf         $(buildroot)$(AMCONFDIR)/amanda-client.conf
	install -D -m 644 $(buildroot)$(AMANDAHOMEDIR)/example/global-amanda.conf         $(buildroot)$(AMCONFDIR)/amanda.conf
	install -D -m 600 $(buildroot)$(AMANDAHOMEDIR)/example/amandahome-dot-amandahosts $(buildroot)$(AMANDAHOMEDIR)/.amandahosts
	install -D -m 640 $(buildroot)$(AMANDAHOMEDIR)/example/amandahome-dot-profile     $(buildroot)$(AMANDAHOMEDIR)/.profile


##################
################################ permissions for backup-server
##################
perm-install-server: binary-install
	# dh_testroot
	# dh_fixperms -v
	
	#
	# install -o root -g root -m 0644 PKGBUILD/lintian \
	# 	$(buildroot)/usr/share/lintian/overrides/amanda-backup-server
	chown -R root:root $(buildroot)$(AMLIBEXECDIR)
	
	chown -R $(AMANDAUSER):$(AMANDAGROUP) \
	    $(buildroot)$(AMANDAHOMEDIR) \
	    $(buildroot)$(SYSCONFDIR)/amanda \
	    $(buildroot)$(LOGDIR) \
	    $(buildroot)/usr/sbin/*

	chown root:root \
	    $(buildroot)$(AMLIBDIR)/lib*.so \
	    $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	
	chown root:$(AMANDACLIGROUP) \
	    $(buildroot)$(AMLIBEXECDIR)/ambind \
	    $(buildroot)$(AMLIBEXECDIR)/application/amgtar  \
	    $(buildroot)$(AMLIBEXECDIR)/application/amstar \
	    $(buildroot)$(AMLIBEXECDIR)/calcsize \
	    $(buildroot)$(AMLIBEXECDIR)/killpgrp \
	    $(buildroot)$(AMLIBEXECDIR)/rundump \
	    $(buildroot)$(AMLIBEXECDIR)/runtar
	
	chmod -R u=rwX,g=rX,o=rX $(buildroot)$(AMLIBEXECDIR) 

	chmod 0755 \
	    $(buildroot)$(AMLIBEXECDIR)/* \
	    $(buildroot)$(AMLIBEXECDIR)/application/*
	# chmod 0755 $(buildroot)$(AMLIBEXECDIR)/rest-server/bin/*
	
	# touching these afterward removes the critical setuid bit
	chmod 04750 \
	    $(buildroot)$(AMLIBEXECDIR)/ambind \
	    $(buildroot)$(AMLIBEXECDIR)/application/amgtar \
	    $(buildroot)$(AMLIBEXECDIR)/application/amstar \
	    $(buildroot)$(AMLIBEXECDIR)/calcsize \
	    $(buildroot)$(AMLIBEXECDIR)/killpgrp \
	    $(buildroot)$(AMLIBEXECDIR)/rundump \
	    $(buildroot)$(AMLIBEXECDIR)/runtar
	
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amcat.awk
	
	chmod 0444 $(buildroot)$(AMLIBEXECDIR)/amplot.awk
	chmod 0444 $(buildroot)$(AMLIBEXECDIR)/amplot.g
	chmod 0444 $(buildroot)$(AMLIBEXECDIR)/amplot.gp
	rm -f $(buildroot)$(ROOTLIBDIR)/charset.alias  # from gnulib somehow
	
	##################
	# internal executible files
	##################
	chmod u=rwx,g=rx,o=rx $(buildroot)$(SBINDIR)/*
	##################
	# internal readable / private-contents files
	##################
	chmod -R u=rwX,g=rX,o= $(buildroot)$(AMCONFDIR)
	
	# NOTE: non-recursive setup of dirs
	chmod -R u=rwX,g=rX,o= $(buildroot)$(LOGDIR)
	chmod    u=rwX,g=rws,o= $(buildroot)$(LOGDIR)
	chmod    u=rwX,g=rws,o= $(buildroot)$(LOGDIR)/amandad
	# chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/server
	# chmod 0700 $(buildroot)$(LOGDIR)/server
	# chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/amanda-rest-server-log
	# chmod 0700 $(buildroot)$(LOGDIR)/amanda-rest-server-log
	
	##################
	# config/internal files
	##################
	chmod -R u=rwX,g=rX,o= $(buildroot)$(AMANDAHOMEDIR)
	chmod -R u=rwX,g=rwX,o= $(buildroot)$(AMANDAHOMEDIR)/gnutar-lists/
	chmod -R u=rwX,g=,o=  $(buildroot)$(AMANDAHOMEDIR)/{.gnupg,.ssh,.amandahosts,.am_passphrase}
	
	##################
	# resource files only
	##################
	chmod u=rx,g=rx,o=rx $(buildroot)$(AMLIBDIR)/lib*.so
	chmod u=rw,g=r,o=r $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	# chmod u=r,g=r,o=r $(buildroot)$(SYSCONFDIR)/*.d/*
	# rely on sanity-check permissions otherwise
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------
	# FIXME: instead, translate fakeroot into pkgproto
	sed -i -e '/^i /!d' $(buildroot).pkgproto.hdr       # remove old lines if present?
	cd $(buildroot); [ -x /bin/pkgproto ] && \
		{ /bin/pkgproto . | cat $(buildroot).pkgproto.hdr - > $(buildroot).pkgproto; }


#    -rw-r--r--    1 root    root                     2030 Nov 16 22:05 /etc/amanda-security.conf
#
#    drwx------    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.gnupg
#    drwx------    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.ssh
#    -rw-------    1 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/.am_passphrase
#    -rw-------    1 amandabaamandaba                  180 Nov 16 22:05 /var/lib/amanda/.amandahosts

#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /etc/amanda
#    -rw-r-----    1 amandabaamandaba                  794 Nov 16 22:05 /etc/amanda/amanda-client.conf
#    -rw-r-----    1 amandabaamandaba                 2030 Nov 16 22:05 /etc/amanda/amanda-security.conf
#    -rw-r-----    1 amandabaamandaba                   73 Nov 16 22:05 /etc/amanda/amanda.conf
#
#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda
#    -rw-r-----    1 amandabaamandaba                   56 Nov 16 22:05 /var/lib/amanda
#
#    drwxrwx---    2 amandabaamandaba                    0 Nov 16 22:05 /var/log/amanda
#    drwxr-x---    2 amandabaamandaba                    0 Nov 16 22:05 /var/log/amanda/server
#
#    drwxrwx---    2 amandabaamandaba                    0 Nov 16 22:05 /var/lib/amanda/gnutar-lists
#
#    -r--r--r--    1 root    root                        0 Nov 16 22:05 /etc/*.d/...
#    -r--r--r--    1 root    root                      784 Nov 16 22:05 /usr/lib/systemd/system/
#
#    -rw-r--r--    1 root    root                      135 Nov 16 22:05 /usr/lib64/amanda/amcat.awk
#
#    drwxr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/lib64/...
#    -rwxr-xr-x    1 root    root                      965 Nov 16 22:05 /usr/lib64/...
#    -rwxr-xr-x    1 root    root                     3365 Nov 16 22:05 /usr/sbin/...
#
#    drwxr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/lib64/amanda/perl
#    -rw-r--r--    2 root    root                        0 Nov 16 22:05 /usr/lib64/amanda/perl/...
#
#    -rwsr-x---    1 root    tape                    11376 Nov 16 22:05 /usr/lib64/amanda/ambind
#    -rwsr-xr-x    1 root    root                    51096 Nov 16 22:05 /usr/lib64/amanda/application/amgtar
#    -rwsr-xr-x    1 root    root                    42200 Nov 16 22:05 /usr/lib64/amanda/application/amstar
#    -rwsr-x---    1 root    tape                    15920 Nov 16 22:05 /usr/lib64/amanda/calcsize
#    -rwsr-x---    1 root    tape                    11520 Nov 16 22:05 /usr/lib64/amanda/killpgrp
#    -rwsr-x---    1 root    tape                    11544 Nov 16 22:05 /usr/lib64/amanda/rundump
#    -rwsr-x---    1 root    tape                    15728 Nov 16 22:05 /usr/lib64/amanda/runtar
#
#    dr-xr-xr-x    2 root    root                        0 Nov 16 22:05 /usr/share/
#    -r--r--r--    1 root    root                     1508 Nov 16 22:05 /usr/share/

##################
################################ install for amanda-backup-server-devel
##################
binary-install-devel: binary-install-server
	# dh_testdir
	rm -rf $(devel)
	mkdir -p $(devel)
	# dh_prep $(dhpkg)-devel
	# dh_installdirs -v $(dhpkg)-devel
	
	# snip off $(buildroot) from start ... to dup the path
	mkdir -p $(devel)$(AMLIBDIR)
	ls -1 $(buildroot)$(SHLIBDIR)/*.{a,la,so} $(buildroot)$(SHLIBDIR)/*.so.* 2>/dev/null | \
	        xargs -r cp -a -t $(devel)$(SHLIBDIR)
	mkdir -p $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	mkdir -p $(devel)/usr/include/amanda
	
	echo "Amanda Community Edition - version $(AMVER)" > $(devel)$(AMANDAHOMEDIR)/amanda-release
	
	rm -f $(devel)$(AMANDAHOMEDIR)/amanda-config
	
	cp -a ./config.status ./config.status.save
	sed -i -e ':redo' -e '/"\\$$/{N;s,"\\\n",,;b redo}' ./config.status.save
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	./config.status.save --config | \
	   sed \
		 -e "s|$$build_topdir_abs|$$build_topdir|g" \
		 -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		 -e "s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g" \
	     >$(devel)$(AMANDAHOMEDIR)/amanda-config
	
	cp -a $(addprefix config/,$(DEVEL_CONFIG_COPIED)) $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	
	# each may have a different *-src dir
	cp -a $(addprefix */,$(DEVEL_INCLUDE_FILES)) $(devel)/usr/include/amanda
		
	touch dummy.la
	#
	# these files can't work with old paths in them anyway
	#
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	find dummy.la $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f | \
		xargs -r sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g"
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs -r sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		     -e "/dependency_libs=/s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g" \
		     -e "/libdir=/s|$(AMLIBDIR)|%{DESTDIR}$(AMLIBDIR)|g"
	
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs -r chmod uog-x
	rm -f dummy.la
	#
	# confirm no paths are left
	#
	set -x; if find $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi
	set -x; if find $(devel)$(LIBDIR) -type f -name \*.la  -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi


##################
################################ install for amanda-backup-server-tests
##################
binary-install-tests: binary-install-server
	# dh_testdir
	rm -rf $(tests)
	mkdir -p $(tests)
	# dh_prep $(dhpkg)-tests
	# dh_installdirs -v $(dhpkg)-tests

	make -C installcheck --eval=$$'cleanfiles-query:\n\t@ls -1 $(CLEANFILES) 2>/dev/null || true' \
                     cleanfiles-query | \
               cpio -dvp $(tests)$(AMTESTSDIR) || true
	
	cd installcheck; ls -1d *.pm */. | xargs realpath --relative-to=. | \
           find $(cat) -type f | cpio -dvp $(tests)$(AMTESTSDIR) || true
	
	rm -f $(tests)$(AMTESTSDIR)/amcat*.??
	
	# tests/catalogs/tapers.cat is executable but has no shebang, removing executable bit
	# tests/amrecover is executable but has no shebang, removing executable bit
	# tests/Amanda_Report.pl is executable but has no shebang, removing executable bit
	
	for i in common_tests client_tests server_tests full_tests restore_tests ndmp_tests mock_tests all_tests; do \
            make -C installcheck --eval=$$'testfiles-query:\n\t@ls -1d $$('"$$i"') 2>/dev/null || true' \
               testfiles-query > "$(tests)$(AMTESTSDIR)/.$${i//_/-}"; \
	done
	
	# remove any -flush tests [that always fail] from the all-tests set
	sed -i -e '/-flush$$/d' "$(tests)$(AMTESTSDIR)/.all-tests"
	
	cp -vt $(tests)$(AMTESTSDIR) \
              packaging/common/run-installcheck.sh


##################
################################ permissions for backup-server-devel
##################
perm-install-devel: binary-install
	# dh_testroot
	chown -R root:root $(devel)
	find $(devel) -type f | \
		xargs -r chmod 0644
	find $(devel) -type d | \
		xargs -r chmod 0755
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------
	# FIXME: instead, translate fakeroot into pkgproto
	sed -i -e '/^i /!d' $(devel).pkgproto.hdr       # remove old lines if present?
	cd $(devel); [ -x /bin/pkgproto ] && \
		{ /bin/pkgproto . | cat $(devel).pkgproto.hdr - > $(devel).pkgproto; }


##################
################################ permissions for amanda-backup-server-tests
##################
perm-install-tests: binary-install
	# dh_testroot
	chown -R root:root $(tests)$(AMDATADIR)
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(tests)$(AMTESTSDIR)
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------

#
# bottleneck after completed all installation
#
binary-install: binary-install-stamp
binary-install-stamp:
	# reset back to BUILD PATH again...
	LD_PRELOAD= \
	LD_LIBRARY_PATH= \
	    $(MAKE) -f $(THIS_MAKEFILE) \
		PATH=$(BUILD_PATH) \
		binary-install-server \
		binary-install-devel \
		binary-install-tests
	#
	# dh_installdocs -v
	#
	#dh_installexamples -v $(buildroot)$(AMANDAHOMEDIR)/example
	#dh_installchangelogs -v ChangeLog
	while read i; do install -D $$i $(buildroot)$(DOCDIR); done  <$(buildroot).docs

	#dh_strip --dbg-package=amanda-backup-server-dbg
	
	#dh_compress
	# need external dependencies
	LD_PRELOAD= /usr/bin/touch $@


ifdef BUILDROOT 

PKG_NAME := $(shell [ ! -s $(BUILDROOT).pkginfo ] || { eval $$(grep '^PKG=' $(BUILDROOT).pkginfo); echo $$PKG; })

create_pkg: $(PKG_NAME).pkg

create_p5m: $(BUILDROOT).p5p

%.pkg: $(BUILDROOT).pkginfo $(BUILDROOT).pkgproto
	# FIXME: instead, translate fakeroot into pkgproto
	for i in $(addsuffix ",$(addprefix ",$(SHARED_DIRS))); \
            do i="$${i#/}"; ( set -x; sed -i -e "\|^d none $$i |d" $(BUILDROOT).pkgproto; ); done
	for i in $(addsuffix ",$(addprefix ",$(CONFIG_FILES))); \
            do i="$${i#/}"; ( set -x; sed -i -e "\|^f none $$i |s/^f/e/" $(BUILDROOT).pkgproto; ); done
	pkgmk -d . -r $(BUILDROOT) -o -f $(BUILDROOT).pkgproto
	pkgtrans -s . $@ $(PKG_NAME)

%.p5p: %.mog
	# it will complain about preinst postinst scripts...
	ls $(dir $@)$(PKG_NAME).pkg 
	pkgsend generate 2>/dev/null $(dir $@)$(PKG_NAME).pkg > $*.proto || true
	sed -i -e '/^unknown /d' -e '/^license.*$(PKG_NAME)/d' $*.proto
	[ -s $*.proto ]
	pkgmogrify -v $< $*.proto > $*.list
	[ -s $*.list ]
	pkgdepend generate -md $* $*.list | pkgfmt > $*.p5m
	pkgdepend resolve -m $*.p5m |& tee $*.depend-err
	rm -rf $*.repo
	pkgrepo create $*.repo
	pkgrepo -s $*.repo set publisher/prefix=betsol.com
	pkgsend publish -s $*.repo -d $* $*.p5m.res
	pkgrecv -s $*.repo -a -d $@ \*
endif


export GNU_TRIPLET ?= $(shell $(SHELL) config/config.guess)
#
# bottleneck after completed all permissions resets
#
final-install:
	# fakeroot can remain entirely within this MAKE only,
	#    if perms were remembered from these chmod/chown calls
	fakeroot -- $(MAKE) -f $(THIS_MAKEFILE) \
	   PATH=$(FAKEROOT_PATH) \
	   SHELL=/opt/csw/bin/bash \
	   GCC_TARGET=$(GCC_TARGET) \
		perm-install-server \
		perm-install-devel \
		perm-install-tests
	#
	# dh_makeshlibs -v
	# dh_shlibdeps $(dhpkg) -v \
	#	-l"$(SHLIBDIR):$(AMLIBDIR)"
	#
	# dh_perl $(dhpkg) -v $(AMPERLDIR)
	# dh_installdeb
	# dh_gencontrol
	# dh_md5sums
	# dh_builddeb

	cd PKGBUILD; [ -f depend ] || { [ -f depend-$(GNU_TRIPLET) ] && cp -f depend-$(GNU_TRIPLET) depend; }
	#
	$(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(buildroot) create_pkg
	$(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(devel) create_pkg
	# $(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(tests) create_pkg
	[ ! -x /bin/pkg ] || $(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(buildroot) create_p5m
	[ ! -x /bin/pkg ] || $(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(devel) create_p5m
	# [ ! -x /bin/pkg ] || $(MAKE) -f $(THIS_MAKEFILE) -C PKGBUILD BUILDROOT=$(tests) create_p5m
	for i in $$(ls 2>/dev/null PKGBUILD/*.pkg PKGBUILD/*.p5p ); do mv $$i $${i/./-$(AMVER)-$(GNU_TRIPLET).}; done

	{ ls 2>/dev/null PKGBUILD/*.pkg PKGBUILD/*.p5p | xargs mv -t "$(SRCDIR)"; } || true

clean:
	# dh_testdir
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent clean
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent distclean
	-rm -f build-stamp missing config/config.h common-src/genversion
	-find . -type d -name .deps -exec rm -rf {} \;
	-test -r $$(automake --print-libdir)/config.sub && \
		cp -f $$(automake --print-libdir)/config.sub config/config.sub
	-test -r $$(automake --print-libdir)/config.guess && \
		cp -f $$(automake --print-libdir)/config.guess config/config.guess
	# dh_clean -d -v  # build dirs only

binary: final-install
.PHONY: build clean binary-install binary-install-server binary-install-devel binary-install-platform
.PHONY: final-install perm-install-server perm-install-devel

# vim:ft=make

