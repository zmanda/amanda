#
#                  Copyright (C) 2019 Zmanda.
#                  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#

%define rpmbuild_version  %(rpmbuild --version | tr -dc 0-9. | tr . ' ' | xargs -l printf "%03d.%03d.%03d")

%bcond_without systemd

%global build_srpm 0
%{?srpm_only: %define build_srpm 1}

%define _my_systemd_units \\\
       amanda-client.socket

%global _buildshell /bin/bash

%undefine _python_bytecompile_errors_terminate_build
%undefine _missing_build_ids_terminate_build
%define _debugsource_packages 1
# @undefine _use_internal_dependency_generator
# Null __perl_requires to prevent perl module auto requires generation.
# @define __perl_requires @{nil}

# use a python byte compiler
%if "%{rpmbuild_version}" > "004.015.999"
%undefine __brp_python_bytecompile
%else
%global _python_bytecompile_extra 1
%endif


%define _build_id_links alldebug

%define dist       %%PKG_DIST%%
%define distver    %%PKG_DISTVER%%
%define disttag    %(A="%%PKG_SUFFIX%%"; A="${A#.}"; echo ${A%%%%.*})

#
# use the platform to determine it
#
%define glib2_build   %(pkg-config --modversion glib-2.0)

%define glib2_pkg_name glib2
%define glib2_devel_pkg_name glib2-devel

%if "%{dist}" == "suse"
%define glib2_pkg_name libglib-2_0-0
%endif

# force it to be portable everywhere.. (will match even if in /usr/lib instead)
%define _logrotatedir         /etc/logrotate.d
%define _ldsoconfdir          /etc/ld.so.conf.d

# Define which Distribution we are building:
# Try to detect the distribution we are building:
%if "%{_vendor}" == "amazon"
    %define dist amazon
    %define distver 1
    %define disttag  amzn
%endif

# Set options per distribution
%if "%{dist}" == "redhat" || "%{dist}" == "centos" || "%{dist}" == "fedora"
    %define rpm_group Applications/Archiving
%endif
%if "%{dist}" == "suse"
    %define rpm_group Productivity/Archiving/Backup
    # /lib/systemd/system is not a valid path for earlier SuSE
%endif

%define _unitdir_compat       %(A="$(systemctl show -p UnitPath)"; A="${A% *.late}"; echo "${A##* }")

# Let's die if we haven't detected the distro.  This might save some frustration.
# RPM does not provide a way to  exit gracefully, hence the tag_to_cause_exit.
%{!?distver: %{error:"Your distribution and its version were not detected."}; %tag_to_cause_exit }
# Set minimum tar version if it wasn't set in the per-distro section
%{!?tarver: %define tarver 1.15}

%define packer %(%{__id_u} -n)

# --- Definitions ---
# only has time if not a tagged release..
%define branch_time_version  %(A="%%PKG_REV%%";       A="${A%%.git.*}"; echo "${A%%.tag.*}" )
%define target_version       %(A="%%VERSION%%"; echo "${A%%[^0-9.]*}")
%define build_date %%DATE%%

# Define amanda_version using the value determined by
# packaging/common/substitute.pl.
%define amanda_version %%VERSION%%
%define amanda_release %%PKG_REV%%

%define amanda_version_info "Amanda Community Edition - version %{amanda_version}"
%define amanda_user %%AMANDAUSER%%
%define amanda_group %%AMANDAGROUP%%
%define amanda_cligroup %%AMANDACLIGROUP%%
# @define amanda_tapegroup %%AMANDATAPEGROUP%%

%define udpportrange "800,840"
%define tcpportrange "11000,11040"
%define low_tcpportrange "800,840"

%define devel_include_files \
    am_sl.h  \
    amjson.h  \
    amanda.h  \
    amflock.h  \
    amutil.h  \
    conffile.h  \
    config.h  \
    debug.h  \
    device.h  \
    directtcp-connection.h \
    directtcp.h  \
    file.h  \
    fileheader.h  \
    full-read.h  \
    full-write.h  \
    glib-util.h  \
    property.h  \
    s3-util.h  \
    s3.h  \
    safe-read.h  \
    sockaddr-util.h

%define devel_config_files \
	config.rpath \
	amanda \
	gnulib \
	gettext-macros \
	macro-archive \
	automake \
	config.h


#####################################
################  BUILD PACKAGE DEFINITION
#####################################
Name: amanda
Summary: The Amanda Backup and Archiving System
Version: %{amanda_version}
%define rpm_release %{amanda_release}.%{disttag}
%if %{build_srpm} > 0
%define rpm_release %{amanda_release}
%endif
Release: %{rpm_release}
Source: %{name}-%{amanda_version}.tar.gz
License: http://wiki.zmanda.com/index.php/Amanda_Copyright
Vendor: %{_vendor}
Packager: Zmanda - A Betsol Company
Url: http://www.zmanda.com/
BuildRoot: %{_tmppath}/%{name}-%{amanda_version}-%{rpm_release}-%{packer}-buildroot
Group: %{rpm_group}
ExclusiveOS: linux
# TODO - Need required versions for these:
BuildRequires: autoconf
BuildRequires: automake
BuildRequires: binutils
BuildRequires: bison
BuildRequires: flex
BuildRequires: gcc
BuildRequires: %glib2_pkg_name >= 2.2.0
BuildRequires: %glib2_pkg_name <= %glib2_build
BuildRequires: %{glib2_devel_pkg_name}
BuildRequires: gettext
%if "%{dist}" == "suse"
BuildRequires: docbook-xsl-stylesheets
%else
BuildRequires: docbook-style-xsl
%endif
# xsltproc for manpages
BuildRequires: libxslt
# libtoolize for later autotools
BuildRequires: libtool
# rpcgen for libndmp
BuildRequires: /usr/bin/rpcgen
BuildRequires: swig
# Note: newer distros have changed most *-devel to lib*-devel, and added a
# provides tag for backwards compat.
BuildRequires: readline-devel
BuildRequires: curl >= 7.10.0
BuildRequires: curl-devel >= 7.10.0
BuildRequires: openssl
BuildRequires: openssl-devel
BuildRequires: perl(ExtUtils::Embed)
BuildRequires: ncurses-devel

# --- Build-common Package description ---

%description
Amanda is the leading Open-Source Backup and Archiving software.

The amanda-backup-client package should be installed on the Amanda server, i.e.
the machine attached to backup media (such as a tape drive or disk
drives) where backups will be written. The amanda-backup-client package
includes Amanda client.  The amanda-backup_client package needs
to be installed on every system that is being backed up.

Amanda Forums is located at: http://forums.zmanda.com/
Amanda Documentation is available at: http://wiki.zmanda.com/

#####################################
################  BACKUP-CLIENT ONLY #####################
#####################################
%package -n amanda-backup-client
Summary: The Amanda Backup and Archiving Client
Group: %{rpm_group}
Requires(pre): /bin/awk
Requires(pre): /usr/bin/id
Requires(pre): /bin/bash
Requires(pre): /bin/sh
Requires(pre): /usr/sbin/useradd
Requires(pre): /usr/sbin/usermod
Requires(pre): %{_ldsoconfdir}
Requires: /sbin/ldconfig
Requires: /usr/bin/gpg-agent
Requires: /usr/bin/gpg2
Requires: %{_logrotatedir}
Requires: coreutils
Requires: gettext
Requires: grep
Requires: gnuplot
Requires: curl >= 7.10.0
Requires: openssl
%if "%{dist}" == "suse"
Requires: perl(x86-64) >= 5.10.1
%else
Requires: perl(x86-64) >= 4:5.10.1
%endif
Requires: tar >= %{tarver}
Requires: perl(Carp)
Requires: perl(Data::Dumper)
Requires: perl(DynaLoader)
Requires: perl(Encode)
Requires: perl(Encode::Locale)
# internal
# Requires: perl(JSON)
%if "%{rpmbuild_version}" > "004.011.999"
Recommends: samba-client
Recommends: mailx
Recommends: mtx
%endif
# NOTE: mailx missing will make errors in logs, but
#      configuration could override these
%if %{with systemd}
Requires: /usr/bin/systemctl
%else
Requires: /etc/xinetd.d
%endif
Requires: tar >= %{tarver}
Requires: %glib2_pkg_name >= %glib2_build
Requires: /etc/services
Provides: amanda-backup-client = %{amanda_version}
Conflicts: amanda-backup_client, amanda-backup_server
Conflicts: amanda, amanda-server, amanda-client, amanda-backup-server

%description -n amanda-backup-client
Amanda is the leading Open-Source Backup and Archiving software.

This package contains the Amanda client.  The amanda-backup-client package
needs to be installed on every system that is being backed up if no server is present.

Amanda Forums is located at: http://forums.zmanda.com/
Amanda Documentation is available at: http://wiki.zmanda.com/

#####################################
################  BACKUP-DEVEL #####################
#####################################
%package -n amanda-backup-client-devel
Release: %{rpm_release}.client
Summary: Amanda Backup and Archiving Server [%{disttag}]
Group: %{rpm_group}

%description -n amanda-backup-client-devel
Amanda is the leading Open-Source Backup and Archiving software.

This package contains the Amanda client development files.

#####################################
################  BACKUP-TEST #####################
#####################################
%package -n amanda-backup-client-tests
Release: %{rpm_release}.client
Summary: Amanda Community Backup and Archiving Server Tests [%{disttag}]
Group: %{rpm_group}

%description -n amanda-backup-client-tests
Amanda is the leading Open-Source Backup and Archiving software.

This package contains the Amanda server test files.

# --- Directory setup ---

# Configure directories:
%define PREFIX          /usr
%define EPREFIX         %{PREFIX}
%define BINDIR          %{EPREFIX}/bin
%define SBINDIR         %{EPREFIX}/sbin
%define AMINCDIR        %{EPREFIX}/include/amanda
%define SHAREDIR         %{PREFIX}/share
%define SYSCONFDIR      %%SYSCONFDIR%%
%define LOCALSTATEDIR   /var
%define SYSLOGDIR       /var/log
%define AMANDATES       %%AMANDAHOMEDIR%%/amandates
%define AM_CONFDIR      %{SYSCONFDIR}/amanda
%define AMANDAHOMEDIR   %%AMANDAHOMEDIR%%
%define AMHOMEDIR       %%AMANDAHOMEDIR%%
%define AMVARDIR        %{LOCALSTATEDIR}/amanda
%define AMDATADIR       %{SHAREDIR}/amanda

%ifarch x86_64 s390x
%define LIBDIR          %{EPREFIX}/lib64
%else
%define LIBDIR          %{EPREFIX}/lib
%if %([ -d %{LIBDIR}64 ]; echo $?) == 0
%define LIBDIR_COMPAT   %{EPREFIX}/lib64
%endif
%endif

%define AMLIBDIR        %{LIBDIR}

%define AMPERLDIR       %{LIBDIR}/amanda/perl
%define LIBEXECDIR      %{LIBDIR}
%define AMLIBEXECDIR    %{LIBDIR}/amanda
%{?LIBDIR_COMPAT: %define AMLIBEXECDIR_COMPAT %{LIBDIR_COMPAT}/amanda}
%define MANDIR          %{SHAREDIR}/man
%define LOGDIR          %%LOGDIR%%

%define BUILD_TOPDIR	%{_builddir}/%{name}-%{amanda_version}

%global __python 	%(command -v python3)
%global __python3 	%(command -v python3)
%global __perl 		%(command -v perl)
%global __build_shell   %(command -v bash)
%define INSTALL_CONFDIR %{SYSCONFDIR}
# [must usable for ALL Debian paths too]
%define INSTALL_UNITDIR %{_unitdir_compat}
%define INSTALL_PYTHON 	%{__python3}
%define INSTALL_LDPATH	%{AMLIBEXECDIR}

# Installation directories:
%define ROOT_SBINDIR            %{buildroot}%{SBINDIR}
%define ROOT_SHAREDIR           %{buildroot}%{SHAREDIR}
%define ROOT_LOCALSTATEDIR      %{buildroot}%{LOCALSTATEDIR}
%define ROOT_SYSCONFDIR         %{buildroot}%{SYSCONFDIR}
%define ROOT_AMCONFDIR          %{buildroot}%{AM_CONFDIR}
%define ROOT_AMANDAHOMEDIR      %{buildroot}%{AMANDAHOMEDIR}
%define ROOT_AMLIBDIR           %{buildroot}%{AMLIBDIR}
%define ROOT_AMDATADIR          %{buildroot}%{AMDATADIR}
%define ROOT_MANDIR             %{buildroot}%{MANDIR}
%define ROOT_LOGDIR             %{buildroot}%{LOGDIR}
%define ROOT_AMHOMEDIR          %{buildroot}%{AMHOMEDIR}
%define ROOT_AMLIBEXECDIR       %{buildroot}%{AMLIBEXECDIR}
%define ROOT_AMINCDIR           %{buildroot}%{AMINCDIR}

# --- Unpack ---
# --- Unpack ---
# --- Unpack ---
# --- Unpack ---
# --- Unpack ---

########################################
%prep
#!/bin/bash
########################################

%setup -T -b 0

[ -s Makefile ] && make distclean || true
[ -s Makefile ] && make clean || true

cat >./rpm-env.sh /dev/null - <<CLEAR_DEFAULT
   unset CONFIG_LDPATH
   unset AMPERL
   export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}
   export PATH=${PATH}
   # find a standard-path as default
   export PERL=$(command -v perl)
   export PYTHON=$(command -v python3)
CLEAR_DEFAULT

command -v realpath >/dev/null || realpath() { readlink -e "$@"; }

export PYTHON="%{__python}"
export PERL="%{__perl}"
export AMPERL="%{__perl}"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:%{_libdir}/pkgconfig:%{_datadir}/pkgconfig"

# must get standard paths to "exec" target... ignoring symlinks-to-bin-file
# otherwise paths cannot be easily substituted
export PYTHON="$(realpath ${PYTHON%/*})/${PYTHON##*/}"
export PERL="$(realpath ${PERL%/*})/${PERL##*/}"

# eval 'LDFLAGS="$(tr -d "\\n")"' <<==========LDFLAGS
#     -Wl,--disable-new-dtags
#     -Wl,-rpath -Wl,%{INSTALL_LDPATH}
# ==========LDFLAGS
  LDFLAGS=
  declare -p >>./rpm-env.sh 2>/dev/null \
    LDFLAGS


# override earlier values if changed
declare -p >>./rpm-env.sh 2>/dev/null \
   PKG_CONFIG_PATH \
   PATH \
   PERL \
   PYTHON

true

# --- Configure and compile ---
#########################################
%build
#!/bin/bash
#########################################

#
# install needed environment
#
[ -f ./configure ] || ./autogen

. ./rpm-env.sh
export GCC_TARGET=$(gcc -dumpmachine | tr -d '\n')

## /bin
##    CAT DD GNUTAR GREP GZIP
##    MOUNT
##    NC PS READLINK
##    UMOUNT UNAME
##
## /usr/bin
##    SORT SORT_PATH
##    SSH
##    PERL
##    REALPATH
##
## dynamic check
##    LPR MT DUMP RESTORE
##    XFSDUMP XFSRESTORE
##    BSDTAR COMPRESS_PATH
##    GNUPLOT MAILER REALPATH
##    SSH SORT UNCOMPRESS_PATH
##    MTX

%if %{with systemd}
   systemd_with=with
%else
   systemd_with=without
%endif

./configure \
        CFLAGS="%{optflags} -g -pipe -O2 -std=c11" \
        CXXFLAGS="%{optflags} -g -pipe -O2 -std=c++11" \
 	CPPFLAGS="$CPPFLAGS" \
	LDFLAGS="$LDFLAGS -g" \
        PERL="${PERL}" \
        AMPERL="${AMPERL}" \
        GNUTAR=/bin/tar \
	--enable-as-needed \
	--enable-shared \
        --quiet \
        --host=${GCC_TARGET} \
        --build=${GCC_TARGET} \
        --prefix=%{PREFIX} \
        --libdir=%{LIBDIR} \
        --sysconfdir=%{SYSCONFDIR} \
        --sharedstatedir=%{LOCALSTATEDIR} \
        --localstatedir=%{LOCALSTATEDIR} \
        \
        --sbindir=%{SBINDIR} \
        --mandir=%{MANDIR} \
        --libexecdir=%{LIBEXECDIR} \
        --with-amperldir=%{AMPERLDIR} \
        --with-configdir=%{AM_CONFDIR} \
        --with-amlibdir=%{AMLIBDIR} \
	--with-amdatadir=%{AMHOMEDIR} \
        --with-amlibexecdir=%{AMLIBEXECDIR} \
        --with-gnutar-listdir=%{AMANDAHOMEDIR}/gnutar-lists \
        --with-index-server=localhost \
        --with-tape-server=localhost \
        --with-user=%{amanda_user} \
        --with-group=%{amanda_group} \
        --with-fqdn \
        --with-tmpdir=%{AMANDAHOMEDIR}/tmp \
        --with-bsd-security \
        --with-bsdtcp-security \
        --with-bsdudp-security \
        --with-ssh-security \
        --with-amandahosts \
        --with-amandates=%{AMANDATES} \
        --with-tcpportrange=%{tcpportrange} \
        --with-udpportrange=%{udpportrange} \
        --with-low-tcpportrange=%{low_tcpportrange} \
        --with-assertions \
        --with-debugging=%{LOGDIR} \
        --with-failure-code \
        \
	--with-libcurl \
        --enable-s3-device \
        --disable-installperms \
	--disable-syntax-checks \
        --enable-manpage-build \
        --with-xsltproc       \
        --${systemd_with}-systemd \
        --without-server

make -j`nproc`
make -j1 -C installcheck amrecover
make -j1 -C installcheck 

# --- Install to buildroot ---

########################################
%install
#!/bin/bash
########################################

git_toplevel=$(git rev-parse --show-toplevel)

command -v realpath >/dev/null || realpath() { readlink -e "$@"; }

. packaging/common/common_functions.sh

[ "$(stat -c '%m' %{buildroot})" = "%{buildroot}" ] &&
   { echo "used mount point %{buildroot}"; exit -1; }

chmod u+r,u+X -R %{buildroot}
rm -rf %{buildroot}

################################################ perform source make-install
. ./rpm-env.sh   # last time...
make -o config.status -o config/config.h -j1 DESTDIR=%{buildroot} install

make -j1 DESTDIR=%{buildroot} install
################################################ done with source make-install

# to hold a space in case we need the path /usr/lib64 added!
# install -D -m 644 /dev/null \
#          %{buildroot}%{_ldsoconfdir}/amanda.conf
install -D -m 644 system-scripts/amanda-logrotate \
         %{buildroot}%{_logrotatedir}/amanda


##################
# root-setuid executable / private-contents
##################
find %{ROOT_AMLIBEXECDIR} -type f | xargs chmod 0644
find %{ROOT_AMLIBEXECDIR} -type d | xargs chmod 0755

chmod 0755 %{ROOT_AMLIBEXECDIR}/*
chmod 0755 %{ROOT_AMLIBEXECDIR}/application/*
# chmod 0755 %{ROOT_AMLIBEXECDIR}/rest-server/bin/*

# note chmod'ed even though defattr should retain settings
chmod 04750 %{ROOT_AMLIBEXECDIR}/ambind
chmod 04750 %{ROOT_AMLIBEXECDIR}/calcsize
chmod 04750 %{ROOT_AMLIBEXECDIR}/killpgrp
chmod 04750 %{ROOT_AMLIBEXECDIR}/rundump
chmod 04750 %{ROOT_AMLIBEXECDIR}/runtar

chmod 04755 %{ROOT_AMLIBEXECDIR}/application/amgtar
chmod 04755 %{ROOT_AMLIBEXECDIR}/application/amstar

chmod 0644  %{ROOT_AMLIBEXECDIR}/amcat.awk
# remove for client install
rm -f %{ROOT_AMLIBEXECDIR}/amplot.awk
rm -f %{ROOT_AMLIBEXECDIR}/amplot.g
rm -f %{ROOT_AMLIBEXECDIR}/amplot.gp

%{?AMLIBEXECDIR_COMPAT: ln -sf %{AMLIBEXECDIR} %{AMLIBEXECDIR_COMPAT}}

# find %{buildroot} -name \*.la -delete -o -name \*.a -delete -o -type l -name \*.so -delete

##################
# install/shift misc files in place
##################
# preserve all these
mkdir -p %{ROOT_AMANDAHOMEDIR}/{gnutar-lists,.gnupg,.ssh}
mkdir -p %{ROOT_AMANDAHOMEDIR}/tmp
echo "%{amanda_version_info}" > %{ROOT_AMANDAHOMEDIR}/amanda-client-release
# mkdir -p @{ROOT_AMANDAHOMEDIR}/{staging,vtapes,disk}

# package-placeholders all filled in upon install only
( umask 027;
touch %{ROOT_AMANDAHOMEDIR}/.gnupg/{pubring.gpg,random_seed,secring.gpg,am_key.gpg}
touch %{ROOT_AMANDAHOMEDIR}/.ssh/{id_rsa_amrecover,id_rsa_amdump}{,.pub}
touch %{ROOT_AMANDAHOMEDIR}/.ssh/client_authorized_keys
touch %{ROOT_AMANDAHOMEDIR}/.am_passphrase
)

# mv %{ROOT_SHAREDIR}/amanda %{ROOT_AMDATADIR}
%if %{with systemd}
rm -f %{ROOT_AMANDAHOMEDIR}/example/*inetd*
%else
for i in %{ROOT_SYSCONFDIR}/xinetd.d/*; do f=${i##*/}; mv $i ${i%/*}/${f#xinetd.}; done
%endif

mkdir -p %{buildroot}%{AMVARDIR}
mkdir -p %{ROOT_AMCONFDIR}

mkdir -p %{ROOT_LOGDIR}
mkdir -p %{ROOT_LOGDIR}/client
# NOTE: not needed for client..
# mkdir -p %{ROOT_LOGDIR}/server

install -D -m 640 /dev/null %{buildroot}%{AMANDATES}
# install -D -m 640 /dev/null %{buildroot}%{LOGDIR}/server/amanda-rest-server.error

# both are installed by make-install...
install -D -m 644 %{ROOT_AMCONFDIR}/amanda-security.conf                   %{ROOT_SYSCONFDIR}
install -D -m 644 %{ROOT_AMANDAHOMEDIR}/example/amanda-client.conf         %{ROOT_AMCONFDIR}

install -D -m 644 %{ROOT_AMANDAHOMEDIR}/example/global-amanda.conf         %{ROOT_AMCONFDIR}/amanda.conf
install -D -m 600 %{ROOT_AMANDAHOMEDIR}/example/amandahome-dot-amandahosts %{ROOT_AMANDAHOMEDIR}/.amandahosts
install -D -m 600 %{ROOT_AMANDAHOMEDIR}/example/amandahome-dot-amandahosts %{ROOT_AMANDAHOMEDIR}/.amandahosts.default
install -D -m 640 %{ROOT_AMANDAHOMEDIR}/example/amandahome-dot-profile     %{ROOT_AMANDAHOMEDIR}/.profile

##################
# install all config/devel files correctly
##################
# set the top of the build
build_topdir=%{BUILD_TOPDIR}
# set the no-softlink build path...
build_topdir_abs=$(realpath %{BUILD_TOPDIR})

sed -i -e ':redo' -e '/"\\$/{N;s,"\\\n",,;b redo}' ./config.status

if ./config.status --config 2>/dev/null | grep -q .; then
    CONFIG="$(./config.status --config)"
else
    CONFIG="$(./config.status --version | sed -e '/with options/!d' -e 's,with options ",,' -e 's,"$,,')"
fi

rm -f %{ROOT_AMANDAHOMEDIR}/amanda-config
echo "$CONFIG" |
    sed \
     -e "s|$build_topdir_abs|$build_topdir|g" \
     -e "s|$build_topdir|%%{BUILD_TOPDIR}|g" \
     -e "s| %{AMLIBDIR}/| %%{DESTDIR}%{AMLIBDIR}/|g" \
   	>%{ROOT_AMANDAHOMEDIR}/amanda-client-config

mkdir -p %{ROOT_AMANDAHOMEDIR}/amanda-autoconf
f=(%{devel_config_files});
( cd config; cp -a "${f[@]}" %{ROOT_AMANDAHOMEDIR}/amanda-autoconf; )

mkdir -p %{ROOT_AMINCDIR}
f=(%{devel_include_files});
for i in "${f[@]}"; do cp */$i %{ROOT_AMINCDIR}; done
# cp gnulib/*.h @{ROOT_AMINCDIR}

##################
# install all test files correctly
##################
mkdir -p %{ROOT_AMDATADIR}/tests
PERL5LIB=%{AMPERLDIR} declare -p PERL5LIB > %{ROOT_AMDATADIR}/tests/run.sh
echo 'cd $(dirname $0);' >> %{ROOT_AMDATADIR}/tests/run.sh

(
    set -x
    unset CDPATH
    cd %{BUILD_TOPDIR}/installcheck

    make --eval=$'cleanfiles-query:\n\t@ls -1 $(CLEANFILES) 2>/dev/null || true' \
             cleanfiles-query |
       cpio -dvp %{ROOT_AMDATADIR}/tests || true

    ls -1d *.pm */. | xargs realpaths --relative-to=. | find $(cat) -type f | 
       cpio -dvp %{ROOT_AMDATADIR}/tests || true

    rm -f %{ROOT_AMDATADIR}/tests/amcat*.??

# tests/catalogs/tapers.cat is executable but has no shebang, removing executable bit
# tests/amrecover is executable but has no shebang, removing executable bit
# tests/Amanda_Report.pl is executable but has no shebang, removing executable bit

    for i in common_tests client_tests server_tests full_tests restore_tests ndmp_tests mock_tests all_tests; do
        make --eval=$'testfiles-query:\n\t@ls -1d $('"$i"') 2>/dev/null || true' \
           testfiles-query > "%{ROOT_AMDATADIR}/tests/.${i//_/-}"
    done

    # remove any -flush tests [that always fail] from the all-tests set
    sed -i -e '/-flush$/d' "%{ROOT_AMDATADIR}/tests/.all-tests"

    cp -vt %{ROOT_AMDATADIR}/tests \
       %{BUILD_TOPDIR}/packaging/common/run-installcheck.sh

)

#
# these files can't work with old paths in them anyway
#
find %{ROOT_AMINCDIR} %{ROOT_AMANDAHOMEDIR} -type f | \
    xargs --no-run-if-empty sed -i \
     -e "s|$build_topdir_abs|$build_topdir|g" \
     -e "s|$build_topdir|%%{BUILD_TOPDIR}|g"

find %{ROOT_AMLIBDIR} -type f -name \*.la | \
    xargs --no-run-if-empty sed -i \
     -e "s|$build_topdir_abs|$build_topdir|g" \
     -e "s|$build_topdir|%%{BUILD_TOPDIR}|g" \
     -e "/dependency_libs=/s| %{AMLIBDIR}/| %%{DESTDIR}%{AMLIBDIR}/|g" \
     -e "/libdir=/s|%{AMLIBDIR}|%%{DESTDIR}%{AMLIBDIR}|g"

find %{ROOT_AMLIBDIR} -type f -name \*.la | \
    xargs --no-run-if-empty chmod uog-x

# double check that no devel files have the local BUILD_TOPDIR paths in them at all!!
if find %{ROOT_AMINCDIR} %{ROOT_AMANDAHOMEDIR} -type f -exec grep -q %{_builddir} \{} \; -print | grep -q .; then exit -1; fi
if find %{ROOT_AMLIBDIR} -type f -name \*.la  -exec grep -q %{_builddir} \{} \; -print | grep -q .; then exit -1; fi
true

# --- Clean up buildroot ---

#########################################
%clean
#########################################

[ "$(stat -c '%m' %{buildroot})" = "%{buildroot}" ] &&
   { echo "used mount point %{buildroot}"; exit -1; }

chmod u+rwX -R %{buildroot}
true

# --- Pre/post (un)installation scripts ---

##########################################
%pre -n amanda-backup-client
#!/bin/bash
##########################################
#
# pre installation
# pre installation
# pre installation
#
##########################################
logger "Preinstall for %{name}-%{amanda_version_info} on $(date -R)"

# ------------ Library of functions --------------
%%PRE_INST_FUNCTIONS%%
%%COMMON_FUNCTIONS%%
# ---------- End Library of functions ------------

logger "Preparing to install: %{amanda_version_info} on $(date -R)"

create_user
check_user_group "%{amanda_group}" ||
   add_group "%{amanda_group}"
check_user_supplemental_group "%{amanda_cligroup}" ||
   add_group "%{amanda_cligroup}"
# check_user_supplemental_group "%{amanda_tapegroup}" ||
#    add_group "%{amanda_tapegroup}"


%if %{with systemd}
systemctl -q disable --no-reload %{_my_systemd_units} 2>/dev/null || true

# for upgrade or for install... shut it all down for preinstall
xargs -r     systemctl -q stop <<<"${_my_systemd_units}" 2>/dev/null || true
# try again one line each
xargs -r -n1 systemctl -q stop <<<"${_my_systemd_units}" 2>/dev/null || true

( set -x; systemctl reset-failed )
( set -x; systemctl daemon-reload )
%endif

logger "Preinstall done."

echo "Amanda preinstall logs can be found in '$INSTALL_LOG'."

##########################################
%posttrans -n amanda-backup-client
#!/bin/bash
##########################################
#
# post installation
# post installation
# post installation
#
##########################################
# ---------- Library of functions ------------
%%POST_INST_FUNCTIONS%%
%%COMMON_FUNCTIONS%%
# ---------- End Library of functions ------------

################################## halt old services ###################################
%if %{with systemd}
( set -x; systemctl -q disable --no-reload %{_my_systemd_units} 2>/dev/null ) || true
( set -x; systemctl -q stop %{_my_systemd_units} 2>/dev/null ) || true
%endif
################################## halt old services ###################################

%if %{without systemd}
if check_superserver_running "xinetd"; then
    reload_xinetd restart
else
    reload_xinetd start
fi
%endif

restore_saved_configs

# add this path to check for utilities
fix_security_conf /sbin:/usr/sbin

# needs AMANDAHOMEDIR and amanda_user vars
create_dynamic_keys

# simply logical for any installs (needed for Debian maint scripts!!)
chown -R %{amanda_user}:%{amanda_group} %{AMANDAHOMEDIR}
chown -R %{amanda_user}:%{amanda_group} %{LOGDIR}
chown -R %{amanda_user}:%{amanda_group} %{AM_CONFDIR}

command -v semanage >/dev/null &&
    semanage fcontext -a -f s -t amanda_data_t -r 's0' '/var/lib/amanda/amandad.sock' || true

%if %{with systemd}
( set -x; systemctl -q daemon-reload ) || true
( set -x; systemctl -q disable --now %{_my_systemd_units} ) || true

shutdown_xinetd_socket amanda-client.socket

( set -x; systemctl preset %{_my_systemd_units} ) || true

# only restart those already running...
( set -x; systemctl try-restart %{_my_systemd_units} )
%endif

logger "Amanda Community Client installation complete."

echo "Amanda Community Client installation log can be found in '${INSTALL_LOG}'.";

true

##########################################
%preun -n amanda-backup-client
#!/bin/bash
##########################################
#
# pre un-installation
# pre un-installation
# pre un-installation
#
##########################################
# ---------- Library of functions ------------
%%PRE_RM_FUNCTIONS%%
# ---------- End Library of functions ------------

set +e
# NOTE: do not remove amandauser here

# got to stop this round before the upgrade/fixes
bash -c 'read -t10 delay < <(%{SBINDIR}/amcleanup -vk  --note "critical shutdown before uninstall" 2>&1)'
bash -c 'read -t10 delay < <(%{SBINDIR}/amcleanup -vk  --note "second critical shutdown attempt" 2>&1)'

set +e
%if %{with systemd}
################################## halt old services ###################################
( set -x; systemctl -q disable --no-reload %{_my_systemd_units} ) || true
( set -x; systemctl -q stop %{_my_systemd_units} ) || true

for i in {0..9}; do
   systemctl is-active --quiet %{_my_systemd_units} || break
   sleep 1;
done

( set -x; systemctl -q reset-failed ) || true

units="$(systemctl -a --no-legend --no-pager list-units 'amanda-client@*' ) "
units="$(sed <<<"$units" -e 's,^[^a-z_]*,,' -e 's, .*,,' )"
xargs -tr systemctl stop <<<"$units" || true

( set -x; systemctl -q reset-failed ) || true
( set -x; systemctl -q daemon-reload ) || true
################################## halt old services ###################################
%endif

true

##########################################
%postun -n amanda-backup-client
#!/bin/bash
##########################################
#
# post un-installation
# post un-installation
# post un-installation
#
##########################################

# ------------ Library of functions --------------
%%POST_RM_FUNCTIONS%%
%%COMMON_FUNCTIONS%%
# ---------- End Library of functions ------------

%if %{with systemd}
( set -x; systemctl -q daemon-reload ) || true
%endif
/sbin/ldconfig

%if %{without systemd}
reload_xinetd
%endif

true


#############################################################################################
%files -n amanda-backup-client
#
# files list
# files list
# files list
#
######################################################
# executable files (use actual perm of files)
##################
%defattr(-,root,root,0755)
# owned here
%{AMLIBEXECDIR}

%{?AMLIBEXECDIR_COMPAT: %{AMLIBEXECDIR_COMPAT}}

# amanda-sh-lib.sh
# amandad
# ambind
# amcat.awk
# amndmjob
# calcsize
# killpgrp
# ndmjob
# noop
# patch-system
# restore
# rundump
# runtar
# selfcheck
# sendbackup
# senddiscover
# sendsize
# teecount

# perl/Amanda/*
# perl/auto/Amanda/*

# application
# application/ambsdtar
# application/amgtar
# application/amlog-script
# application/ampgsql
# application/amrandom
# application/amraw
# application/amsamba
# application/amstar
# application/amsuntar
# application/amzfs-sendrecv
# application/amzfs-snapshot
# application/script-email
# application/script-fail

#
# [NOTE: client blocks r-x access to non-group users]
# setuid ... (double specified for reliable confusion!)
#
%attr(04750,root,%{amanda_cligroup}) %{AMLIBEXECDIR}/ambind
%attr(04755,root,root)               %{AMLIBEXECDIR}/application/amgtar
%attr(04755,root,root)               %{AMLIBEXECDIR}/application/amstar
%attr(04750,root,%{amanda_cligroup}) %{AMLIBEXECDIR}/calcsize
%attr(04750,root,%{amanda_cligroup}) %{AMLIBEXECDIR}/killpgrp
%attr(04750,root,%{amanda_cligroup}) %{AMLIBEXECDIR}/rundump
%attr(04750,root,%{amanda_cligroup}) %{AMLIBEXECDIR}/runtar


##################
# open to run
# [NOTE: client grants access to non-group users]
##################
%defattr(0755,root,root,0755)
%{SBINDIR}/am*

#/usr/sbin/amaespipe
#/usr/sbin/amarchiver
#/usr/sbin/ambackup
#/usr/sbin/amcrypt
#/usr/sbin/amcrypt-ossl
#/usr/sbin/amcrypt-ossl-asym
#/usr/sbin/amcryptsimple
#/usr/sbin/amdump_client
#/usr/sbin/amgetconf
#/usr/sbin/amgpgcrypt
#/usr/sbin/amoldrecover
#/usr/sbin/amplot
#/usr/sbin/amrecover
#/usr/sbin/amservice
#/usr/sbin/amssl

# must have number version
%{AMLIBDIR}/lib*-[0-9]*.so
#/usr/lib64/libamanda-4.0.so
#/usr/lib64/libamandad-4.0.so
#/usr/lib64/libamar-4.0.so
#/usr/lib64/libamclient-4.0.so
#/usr/lib64/libamdevice-4.0.so
#/usr/lib64/libamglue-4.0.so
#/usr/lib64/libamserver-4.0.so
#/usr/lib64/libamxfer-4.0.so
#/usr/lib64/libndmjob-4.0.so
#/usr/lib64/libndmlib-4.0.so

#####################
# internal readable / private-contents
#####################
%defattr(0640,%{amanda_user},%{amanda_group},0750)
%dir %{AMANDAHOMEDIR}
%dir %attr(1750,%{amanda_user},%{amanda_group}) %{AMANDAHOMEDIR}/tmp
%dir %{AM_CONFDIR}
%dir %{AMVARDIR}

# @dir @{AMANDAHOMEDIR}/staging
# @dir @{AMANDAHOMEDIR}/vtapes
# @dir @{AMANDAHOMEDIR}/disk
%dir %attr(0700,%{amanda_user},%{amanda_group}) %{AMANDAHOMEDIR}/.gnupg
%dir %attr(0700,%{amanda_user},%{amanda_group}) %{AMANDAHOMEDIR}/.ssh
%dir %attr(0770,%{amanda_user},%{amanda_group}) %{AMANDAHOMEDIR}/gnutar-lists

# prefer any existing file but leave the updated version..
%config(noreplace) %attr(644,root,root) %{SYSCONFDIR}/amanda-security.conf
%config(noreplace) %{AM_CONFDIR}/amanda-client.conf
%config(noreplace) %{AMANDATES}
%config(noreplace) %{AMANDAHOMEDIR}/.profile

# prefer new updated file but preserve edits..
%config %{AM_CONFDIR}/amanda-security.conf
%config %{AM_CONFDIR}/amanda.conf

%dir %attr(0770,%{amanda_user},%{amanda_group}) %{LOGDIR}
# locked down tighter

# @dir @attr(0700,@{amanda_user},@{amanda_group}) @{LOGDIR}/server
# @verify(not md5 size mtime) @attr(0700,@{amanda_user},@{amanda_group}) @{LOGDIR}/server/*

###############################
# essential release and config files
###############################
%defattr(0640,%{amanda_user},%{amanda_group},0750)
%{AMANDAHOMEDIR}/example/
%{AMANDAHOMEDIR}/amanda-client-release
%dir %attr(0700,%{amanda_user},%{amanda_group}) %{LOGDIR}/client
%{AMANDAHOMEDIR}/template.d

%defattr(0600,%{amanda_user},%{amanda_group},0700)
# prefer any old file but preserve new update..
# @ghost @{AMANDAHOMEDIR}/amandad.sock
# @ghost @{AMANDAHOMEDIR}/amanda-rest.sock

%config(noreplace) %{AMANDAHOMEDIR}/.gnupg/*
#.gnupg/am_key.gpg
#.gnupg/pubring.gpg
#.gnupg/random_seed
#.gnupg/secring.gpg

# prefer any old files but preserve new update..
%config(noreplace) %{AMANDAHOMEDIR}/.ssh/*
#.ssh/id_rsa_amdump
#.ssh/id_rsa_amdump.pub
#.ssh/id_rsa_amrecover
#.ssh/id_rsa_amrecover.pub
#.ssh/client_authorized_keys

# prefer any old file but preserve new update..
%config(noreplace) %{AMANDAHOMEDIR}/.am_passphrase
%config(noreplace) %{AMANDAHOMEDIR}/.amandahosts
%{AMANDAHOMEDIR}/.amandahosts.default

######################
# resource files only
######################
%defattr(0444,root,root,0555)
#
%if %{with systemd}
%{INSTALL_UNITDIR}/amanda-*
%{INSTALL_UNITDIR}-preset/*
%else
%config /etc/xinetd.d/*
%endif

# manpages
%{MANDIR}/man5/am*
#@{MANDIR}/man5/disklist.5*
#@{MANDIR}/man5/tapelist.5*
%{MANDIR}/man7/am*
%{MANDIR}/man8/am*
%{MANDIR}/man8/script-email.8*

%dir %{AMDATADIR}
%{AMDATADIR}/[A-Z]*

# one-possibly-removed stub config file
%{_logrotatedir}/amanda
# @{_ldsoconfdir}/amanda*

######################################################
%files -n amanda-backup-client-devel
######################################################
##################
# resource files only
##################
%defattr(0644,root,root,0755)
%{AMINCDIR}
%{AMLIBDIR}/lib*.so
%{AMLIBDIR}/lib*.a
%{AMLIBDIR}/lib*.la

%{AMANDAHOMEDIR}/amanda-autoconf
%{AMANDAHOMEDIR}/amanda-client-config

######################################################
%files -n amanda-backup-client-tests
######################################################
%defattr(-,%{amanda_user},%{amanda_group},0755)
%{AMDATADIR}/tests


# --- ChangeLog

%changelog
* %{build_date} Christopher Hassell <chris.hassell at betsol dot com> VERSION=%%VERSION%% RELEASE=%%PKG_REV%%
- Package created.
